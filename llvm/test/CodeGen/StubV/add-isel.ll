; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=stubv32 --stop-after finalize-isel < %s | FileCheck %s

target datalayout = "e-m:e-p:32:32-i64:64-n32-S128"
target triple = "stubv32"

define i32 @copy_phys_reg(i32 %a, i32 %b) {
  ; CHECK-LABEL: name: copy_phys_reg
  ; CHECK: bb.0 (%ir-block.0):
  ; CHECK-NEXT:   liveins: $x11
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:gpr = COPY $x11
  ; CHECK-NEXT:   $x10 = COPY [[COPY]]
  ; CHECK-NEXT:   PseudoRET implicit $x10
  ret i32 %b
}

define i32 @add(i32 %a, i32 %b) {
  ; CHECK-LABEL: name: add
  ; CHECK: bb.0 (%ir-block.0):
  ; CHECK-NEXT:   liveins: $x10, $x11
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:gpr = COPY $x11
  ; CHECK-NEXT:   [[COPY1:%[0-9]+]]:gpr = COPY $x10
  ; CHECK-NEXT:   [[ADD:%[0-9]+]]:gpr = ADD [[COPY1]], [[COPY]]
  ; CHECK-NEXT:   [[ADDI:%[0-9]+]]:gpr = ADDI killed [[ADD]], 42
  ; CHECK-NEXT:   $x10 = COPY [[ADDI]]
  ; CHECK-NEXT:   PseudoRET implicit $x10
  %c = add i32 %a, %b
  %d = add i32 %c, 42
  ret i32 %d
}

; FIXME: can't do signext return values
define i8 @add_i8_signext(i8 signext %a, i8 signext %b) {
  ; CHECK-LABEL: name: add_i8_signext
  ; CHECK: bb.0 (%ir-block.0):
  ; CHECK-NEXT:   liveins: $x10, $x11
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:gpr = COPY $x11
  ; CHECK-NEXT:   [[COPY1:%[0-9]+]]:gpr = COPY $x10
  ; CHECK-NEXT:   [[ADD:%[0-9]+]]:gpr = ADD [[COPY1]], [[COPY]]
  ; CHECK-NEXT:   $x10 = COPY [[ADD]]
  ; CHECK-NEXT:   PseudoRET implicit $x10
  %c = add i8 %a, %b
  ret i8 %c
}

; FIXME: can't do zeroext return values
define i8 @add_i8_zeroext(i8 zeroext %a, i8 zeroext %b) {
  ; CHECK-LABEL: name: add_i8_zeroext
  ; CHECK: bb.0 (%ir-block.0):
  ; CHECK-NEXT:   liveins: $x10, $x11
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   [[COPY:%[0-9]+]]:gpr = COPY $x11
  ; CHECK-NEXT:   [[COPY1:%[0-9]+]]:gpr = COPY $x10
  ; CHECK-NEXT:   [[ADD:%[0-9]+]]:gpr = ADD [[COPY1]], [[COPY]]
  ; CHECK-NEXT:   $x10 = COPY [[ADD]]
  ; CHECK-NEXT:   PseudoRET implicit $x10
  %c = add i8 %a, %b
  ret i8 %c
}
